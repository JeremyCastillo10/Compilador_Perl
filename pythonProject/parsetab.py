
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS AND ANDBW ANDS ARROBA ARROW CADENA CADENAA CHOP CHOWN CLOSE CMP COLON COMMA COMMENT COMPLEMENT DECREMENTO DEFINED DELETE DEQUAL DIE DISTINT DIVIDE DOLLARDOLLAR DOT EACH ELSE ELSIF ENTERO EOF EQUAL EQUALGREATER EVAL EXEC EXIT EXP EXPREGULAR FILENO FOR FOREACH FORK GOTO GREATER GREATEREQUAL GREATERGREATER GUIONDOWN HEX HEXADECIMAL ID IF INCREMENTO INDEX INT INTERROGATION ISEQUAL ISEQUAL_STRING JOIN KEYS LAST LBLOCK LBRACKET LENGTH LESS LESSEQUAL LESSLESS LOCAL LOG LPAREN MINUS MINUSMINUS MKDIR MY NEXT NOT NOTS OCT OCTAL OPEN OR ORBW ORS PACK PESOS PLUS PLUSGREATER PLUSLESS PLUSPLUS POP PORCENTAJE POSTINDEX PREINDEX PRINT PUSH RAND RBLOCK RBRACKET READ REFERENCE REFERENCIALISTA REFERENCIAS RENAME REQUIRE RETURN REVERSE RINDEX RMDIR RPAREN SEEK SELECT SEMICOLON SHIFT SIN SLEEP SORT SPLIT SQRT SUB SUBSTR SYSTEM TELL TIMES UNLESS UNSHIFT UNTIL USE VALUES WHILE WRITE XORprogram : declaration_listdeclaration_list : declaration declaration_list\n\t\t\t\t\t\t\t| declarationdeclaration : header_declaration\n\t\t\t\t\t\t| print\n\t\t\t\t\t\t| var_declaration\n\t\t\t\t\t\t| sentencia_if\n\t\t\t\t\t\t| function_declaration\n\t\t\t\t\t\t| call_function SEMICOLON\n\t\t\t\t\t\t| E SEMICOLON\n\t\t\t\t\t\t| ciclosheader_declaration : USE ID SEMICOLONheader_declaration : REQUIRE ID SEMICOLONvar_declaration : PESOS ID SEMICOLON\n\t\t\t\t\t\t| MY PESOS ID SEMICOLON\n\t\t\t\t\t\t| PESOS ID EQUAL E SEMICOLON\n\t\t\t\t\t\t| PESOS ID EQUAL call_function SEMICOLON\n\t\t\t\t\t\t| PESOS ID incdec SEMICOLON\n\t\t\t\t\t\t| MY PESOS ID EQUAL typevar SEMICOLON\n\t\t\t\t\t\t| PESOS ID EQUAL typevar SEMICOLONvar_declaration :  ARROBA ID SEMICOLON\n\t\t\t\t\t\t\t| ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON\n\t\t\t\t\t\t\t| ARROBA ID EQUAL ARROBA ID SEMICOLONvar_declaration :  PORCENTAJE ID SEMICOLON\n\t\t\t\t\t\t\t| PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON\n\t\t\t\t\t\t\t| PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON\n\t\t\t\t\t\t\t| PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON\n\t\t\t\t\t\t\t| PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLONlista2 : typevar COMMA typevar COMMA lista2\n\t\t\t\t| typevar COMMA LPAREN lista RPAREN COMMA lista2\n\t\t\t\t| typevar COMMA LBRACKET lista RBRACKET COMMA lista2\n\t\t\t\t| typevar COMMA typevar\n\t\t\t\t| typevar COMMA LPAREN lista RPAREN\n\t\t\t\t| typevar COMMA LBRACKET lista RBRACKET\n\t\t\t\t| ID COMMA typevar COMMA lista2\n\t\t\t\t| ID COMMA LPAREN lista RPAREN COMMA lista2\n\t\t\t\t| ID COMMA LBRACKET lista RBRACKET COMMA lista2\n\t\t\t\t| ID COMMA typevar\n\t\t\t\t| ID COMMA LPAREN lista RPAREN\n\t\t\t\t| ID COMMA LBRACKET lista RBRACKETlista1 : typevar EQUALGREATER typevar COMMA lista1\n\t\t\t\t| typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1\n\t\t\t\t| typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1\n\t\t\t\t| typevar EQUALGREATER typevar\n\t\t\t\t| typevar EQUALGREATER LPAREN lista RPAREN\n\t\t\t\t| typevar EQUALGREATER LBRACKET lista RBRACKET\n\t\t\t\t| ID EQUALGREATER typevar COMMA lista1\n\t\t\t\t| ID EQUALGREATER LPAREN lista RPAREN COMMA lista1\n\t\t\t\t| ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1\n\t\t\t\t| ID EQUALGREATER typevar\n\t\t\t\t| ID EQUALGREATER LPAREN lista RPAREN\n\t\t\t\t| ID EQUALGREATER LBRACKET lista RBRACKETlista : typevar COMMA lista\n\t\t\t\t| typevartypevar : CADENA\n\t\t\t\t\t| CADENAA\n\t\t\t\t\t| ENTERO\n\t\t\t\t\t| OCTAL\n\t\t\t\t\t| HEXADECIMALE : E PLUS T \n\t\t\t| E MINUS T\n\t\t\t| T T : T TIMES F\n\t\t\t| T DIVIDE F\n\t\t\t| F F : PESOS ID\n\t\t\t| PESOS ID LBRACKET ENTERO RBRACKET\n\t\t\t| ENTERO\n\t\t\t| PESOS ID LBLOCK typevar RBLOCK\n\t\t\t| LPAREN E RPARENciclos : FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec  RPAREN LBLOCK declaration_list RBLOCK\n\t\t\t\t\t| FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK\n\t\t\t\t\t| WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCKsent_for : PESOS ID\n\t\t\t\t\t| PESOS ID EQUAL ENTERO\n\t\t\t\t\t| MY PESOS ID EQUAL ENTERO\n\t\t\t\t\t| MY PESOS ID EQUAL ENTERO COMMA sent_for\n\t\t\t\t\t| PESOS ID EQUAL ENTERO COMMA sent_forlog : LESS\n\t\t\t| GREATER\n\t\t\t| ISEQUAL\n\t\t\t| ISEQUAL_STRING\n\t\t\t| LESSEQUAL\n\t\t\t| GREATEREQUAL\n\t\t\t| DEQUAL\n\t\t\t| AND\n\t\t\t| ANDS\n\t\t\t| ORS\n\t\t\t| ORtype : typevar\n\t\t\t\t| var_declaration_gencond : type\n\t\t\t\t| cond log cond\n\t\t\t\t| NOT cond\n\t\t\t\t| LPAREN type RPAREN\n\t\t\t\t| LPAREN cond RPARENincdec : PLUSPLUS\n\t\t\t\t\t| MINUSMINUSprint : PRINT arg SEMICOLON\n\t\t\t\t| PRINT LPAREN arg RPAREN SEMICOLONvar_declaration_gen : PESOS ID\n\t\t\t\t\t\t\t\t| PESOS ID LBRACKET ENTERO RBRACKET\n\t\t\t\t\t\t\t\t| PESOS ID LBLOCK \ttypevar RBLOCK\t\n\t\t\t\t\t\t\t\t| PESOS ID LBLOCK\tID RBLOCKarg : var_declaration_gen\n\t\t\t| type\n\t\t\t| type COMMA arg  \n\t\t\t| CADENA\n\t\t\t| var_declaration_gen COMMA arg\n\t\t\t| CADENA COMMA arg sentencia_if : IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK\n\t\t\t\t\t\t| IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK\n\t\t\t\t\t\t| IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK\n\tfunction_declaration : SUB ID LBLOCK declaration_list RBLOCKcall_function : ANDBW ID\n\t\t\t\t\t\t| ANDBW ID LPAREN arg RPAREN'
    
_lr_action_items = {'USE':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[12,12,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,12,-18,-15,-100,-16,-17,-20,12,-114,12,-19,-23,-28,-22,-25,-26,-27,-111,-73,12,12,-72,-112,12,12,-71,-113,]),'REQUIRE':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[13,13,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,13,-18,-15,-100,-16,-17,-20,13,-114,13,-19,-23,-28,-22,-25,-26,-27,-111,-73,13,13,-72,-112,13,13,-71,-113,]),'PRINT':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[14,14,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,14,-18,-15,-100,-16,-17,-20,14,-114,14,-19,-23,-28,-22,-25,-26,-27,-111,-73,14,14,-72,-112,14,14,-71,-113,]),'PESOS':([0,3,4,5,6,7,8,11,14,15,17,25,30,31,32,33,37,53,56,57,58,60,63,64,65,67,68,69,73,74,81,83,85,88,91,92,97,110,113,123,124,125,126,127,128,129,130,131,132,133,134,138,143,147,148,149,166,168,174,178,179,182,191,196,201,208,209,213,215,218,235,236,251,252,267,276,278,279,282,283,],[16,16,-4,-5,-6,-7,-8,-11,41,48,50,59,-9,-10,48,48,41,41,48,48,96,41,-12,-13,-99,41,41,41,-14,48,-21,-24,41,41,16,41,140,-18,-15,41,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,41,-100,-16,-17,-20,16,-114,16,-19,-23,-28,214,-22,-25,-26,-27,-111,96,-73,96,16,16,41,-72,-112,16,16,-71,-113,]),'MY':([0,3,4,5,6,7,8,11,30,31,58,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,215,218,235,236,251,267,276,278,279,282,283,],[17,17,-4,-5,-6,-7,-8,-11,-9,-10,97,-12,-13,-99,-14,-21,-24,17,-18,-15,-100,-16,-17,-20,17,-114,17,-19,-23,-28,-22,-25,-26,-27,-111,97,-73,97,17,17,-72,-112,17,17,-71,-113,]),'ARROBA':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,82,83,91,110,113,141,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[18,18,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,115,-24,18,-18,-15,173,-100,-16,-17,-20,18,-114,18,-19,-23,-28,-22,-25,-26,-27,-111,-73,18,18,-72,-112,18,18,-71,-113,]),'PORCENTAJE':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,84,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[19,19,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,117,19,-18,-15,-100,-16,-17,-20,19,-114,19,-19,-23,-28,-22,-25,-26,-27,-111,-73,19,19,-72,-112,19,19,-71,-113,]),'IF':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[20,20,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,20,-18,-15,-100,-16,-17,-20,20,-114,20,-19,-23,-28,-22,-25,-26,-27,-111,-73,20,20,-72,-112,20,20,-71,-113,]),'SUB':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[21,21,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,21,-18,-15,-100,-16,-17,-20,21,-114,21,-19,-23,-28,-22,-25,-26,-27,-111,-73,21,21,-72,-112,21,21,-71,-113,]),'ANDBW':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,74,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[22,22,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,22,-21,-24,22,-18,-15,-100,-16,-17,-20,22,-114,22,-19,-23,-28,-22,-25,-26,-27,-111,-73,22,22,-72,-112,22,22,-71,-113,]),'FOR':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[24,24,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,24,-18,-15,-100,-16,-17,-20,24,-114,24,-19,-23,-28,-22,-25,-26,-27,-111,-73,24,24,-72,-112,24,24,-71,-113,]),'FOREACH':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[25,25,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,25,-18,-15,-100,-16,-17,-20,25,-114,25,-19,-23,-28,-22,-25,-26,-27,-111,-73,25,25,-72,-112,25,25,-71,-113,]),'WHILE':([0,3,4,5,6,7,8,11,30,31,63,64,65,73,81,83,91,110,113,143,147,148,149,166,168,174,178,179,182,196,201,208,209,213,218,236,251,267,276,278,279,282,283,],[26,26,-4,-5,-6,-7,-8,-11,-9,-10,-12,-13,-99,-14,-21,-24,26,-18,-15,-100,-16,-17,-20,26,-114,26,-19,-23,-28,-22,-25,-26,-27,-111,-73,26,26,-72,-112,26,26,-71,-113,]),'ENTERO':([0,3,4,5,6,7,8,11,14,15,30,31,32,33,37,53,56,57,60,63,64,65,67,68,69,73,74,76,77,81,83,85,88,91,92,104,105,110,113,114,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,138,143,147,148,149,166,168,171,174,178,179,181,182,183,185,186,189,193,196,199,200,201,203,204,206,207,208,209,211,212,213,218,219,222,225,228,236,251,252,256,257,258,259,260,261,262,263,267,276,278,279,282,283,],[28,28,-4,-5,-6,-7,-8,-11,42,28,-9,-10,28,28,42,42,28,28,42,-12,-13,-99,42,42,42,-14,109,111,42,-21,-24,42,42,28,42,144,42,-18,-15,42,42,42,42,42,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,42,-100,-16,-17,-20,28,-114,192,28,-19,-23,42,-28,42,42,42,42,216,-22,42,42,-25,42,42,42,42,-26,-27,42,42,-111,-73,42,42,42,42,28,28,42,42,42,42,42,42,42,42,42,-72,-112,28,28,-71,-113,]),'LPAREN':([0,3,4,5,6,7,8,11,14,15,20,24,26,30,31,32,33,53,55,56,57,60,63,64,65,73,74,81,82,83,84,85,88,91,98,110,113,123,124,125,126,127,128,129,130,131,132,133,134,138,143,147,148,149,166,168,174,178,179,182,183,185,186,189,196,201,208,209,213,218,232,236,251,252,267,276,278,279,282,283,],[15,15,-4,-5,-6,-7,-8,-11,37,15,53,58,60,-9,-10,15,15,85,92,15,15,85,-12,-13,-99,-14,15,-21,116,-24,119,85,85,15,141,-18,-15,85,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,85,-100,-16,-17,-20,15,-114,15,-19,-23,-28,199,203,206,211,-22,-25,-26,-27,-111,-73,252,15,15,85,-72,-112,15,15,-71,-113,]),'$end':([1,2,3,4,5,6,7,8,11,29,30,31,63,64,65,73,81,83,110,113,143,147,148,149,168,178,179,182,196,201,208,209,213,218,267,276,282,283,],[0,-1,-3,-4,-5,-6,-7,-8,-11,-2,-9,-10,-12,-13,-99,-14,-21,-24,-18,-15,-100,-16,-17,-20,-114,-19,-23,-28,-22,-25,-26,-27,-111,-73,-72,-112,-71,-113,]),'RBLOCK':([3,4,5,6,7,8,11,29,30,31,42,44,45,46,63,64,65,73,81,83,90,110,112,113,136,143,145,146,147,148,149,158,168,178,179,182,190,195,196,198,201,202,208,209,213,218,237,238,239,240,241,242,255,264,267,268,269,270,271,276,280,281,282,283,],[-3,-4,-5,-6,-7,-8,-11,-2,-9,-10,-57,-56,-58,-59,-12,-13,-99,-14,-21,-24,-55,-18,151,-15,168,-100,176,177,-16,-17,-20,184,-114,-19,-23,-28,213,218,-22,-50,-25,-44,-26,-27,-111,-73,-47,-51,-52,-41,-45,-46,267,276,-72,-48,-49,-42,-43,-112,282,283,-71,-113,]),'SEMICOLON':([9,10,23,27,28,34,35,36,38,39,40,42,43,44,45,46,49,51,52,55,61,62,70,71,72,75,78,79,80,87,89,90,93,94,95,100,101,102,103,106,107,108,109,135,139,150,151,152,153,156,164,165,167,169,170,175,176,177,180,184,187,188,192,216,234,254,],[30,31,-62,-65,-68,63,64,65,-91,-106,-55,-57,-90,-56,-58,-59,73,81,83,-115,-60,-61,-101,-70,-66,110,-97,-98,113,-92,-91,-55,-63,-64,138,143,-109,-107,-110,147,148,149,-57,-94,-74,-67,-69,178,179,182,-95,-96,-93,-116,191,-102,-104,-103,196,201,208,209,-75,-76,-78,-77,]),'PLUS':([10,23,27,28,47,49,61,62,71,72,93,94,106,109,150,151,],[32,-62,-65,-68,32,-66,-60,-61,-70,-66,-63,-64,32,-68,-67,-69,]),'MINUS':([10,23,27,28,47,49,61,62,71,72,93,94,106,109,150,151,],[33,-62,-65,-68,33,-66,-60,-61,-70,-66,-63,-64,33,-68,-67,-69,]),'ID':([12,13,16,18,19,21,22,41,48,50,59,96,105,115,117,118,119,140,173,214,219,222,225,228,256,257,258,259,260,261,262,263,],[34,35,49,51,52,54,55,70,72,80,98,139,145,153,156,157,160,172,194,233,157,157,243,243,157,157,157,157,243,243,243,243,]),'CADENA':([14,37,53,60,67,68,69,74,77,85,88,92,105,114,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,138,181,183,185,186,189,199,200,203,204,206,207,211,212,219,222,225,228,252,256,257,258,259,260,261,262,263,],[40,40,90,90,40,40,40,90,90,90,90,40,90,90,90,90,90,90,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'CADENAA':([14,37,53,60,67,68,69,74,77,85,88,92,105,114,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,138,181,183,185,186,189,199,200,203,204,206,207,211,212,219,222,225,228,252,256,257,258,259,260,261,262,263,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'OCTAL':([14,37,53,60,67,68,69,74,77,85,88,92,105,114,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,138,181,183,185,186,189,199,200,203,204,206,207,211,212,219,222,225,228,252,256,257,258,259,260,261,262,263,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'HEXADECIMAL':([14,37,53,60,67,68,69,74,77,85,88,92,105,114,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,138,181,183,185,186,189,199,200,203,204,206,207,211,212,219,222,225,228,252,256,257,258,259,260,261,262,263,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'RPAREN':([23,27,28,38,39,40,42,43,44,45,46,47,61,62,66,70,71,72,78,79,86,87,89,90,93,94,99,101,102,103,120,121,135,137,150,151,154,155,161,162,164,165,167,175,176,177,194,197,198,202,205,210,220,223,226,229,237,238,239,240,241,242,245,246,247,248,249,250,253,265,268,269,270,271,272,273,274,275,],[-62,-65,-68,-91,-106,-55,-57,-90,-56,-58,-59,71,-60,-61,100,-101,-70,-66,-97,-98,122,-92,-91,-55,-63,-64,142,-109,-107,-110,164,165,-94,169,-67,-69,180,-54,187,188,-95,-96,-93,-102,-104,-103,217,-53,-50,-44,-38,-32,238,241,246,249,-47,-51,-52,-41,-45,-46,-35,-39,-40,-29,-33,-34,266,277,-48,-49,-42,-43,-36,-37,-30,-31,]),'TIMES':([23,27,28,49,61,62,71,72,93,94,109,150,151,],[56,-65,-68,-66,56,56,-70,-66,-63,-64,-68,-67,-69,]),'DIVIDE':([23,27,28,49,61,62,71,72,93,94,109,150,151,],[57,-65,-68,-66,57,57,-70,-66,-63,-64,-68,-67,-69,]),'COMMA':([38,39,40,42,43,44,45,46,70,90,155,160,163,175,176,177,192,198,202,205,210,216,238,239,241,242,243,244,246,247,249,250,],[67,68,69,-57,-90,-56,-58,-59,-101,-55,181,186,189,-102,-104,-103,215,219,222,225,228,235,256,257,258,259,186,189,260,261,262,263,]),'LESS':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,124,-92,-91,-55,124,-92,124,124,-95,-96,124,124,-102,-104,-103,124,]),'GREATER':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,125,-92,-91,-55,125,-92,125,125,-95,-96,125,125,-102,-104,-103,125,]),'ISEQUAL':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,126,-92,-91,-55,126,-92,126,126,-95,-96,126,126,-102,-104,-103,126,]),'ISEQUAL_STRING':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,127,-92,-91,-55,127,-92,127,127,-95,-96,127,127,-102,-104,-103,127,]),'LESSEQUAL':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,128,-92,-91,-55,128,-92,128,128,-95,-96,128,128,-102,-104,-103,128,]),'GREATEREQUAL':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,129,-92,-91,-55,129,-92,129,129,-95,-96,129,129,-102,-104,-103,129,]),'DEQUAL':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,130,-92,-91,-55,130,-92,130,130,-95,-96,130,130,-102,-104,-103,130,]),'AND':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,131,-92,-91,-55,131,-92,131,131,-95,-96,131,131,-102,-104,-103,131,]),'ANDS':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,132,-92,-91,-55,132,-92,132,132,-95,-96,132,132,-102,-104,-103,132,]),'ORS':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,133,-92,-91,-55,133,-92,133,133,-95,-96,133,133,-102,-104,-103,133,]),'OR':([42,43,44,45,46,70,86,87,89,90,99,120,121,135,164,165,167,170,175,176,177,265,],[-57,-90,-56,-58,-59,-101,134,-92,-91,-55,134,-92,134,134,-95,-96,134,134,-102,-104,-103,134,]),'EQUALGREATER':([42,44,45,46,90,157,159,160,163,],[-57,-56,-58,-59,-55,183,185,183,185,]),'RBRACKET':([42,44,45,46,90,111,144,155,197,221,224,227,230,],[-57,-56,-58,-59,-55,150,175,-54,-53,239,242,247,250,]),'EQUAL':([49,51,52,80,139,172,],[74,82,84,114,171,193,]),'LBRACKET':([49,70,72,183,185,186,189,],[76,104,76,200,204,207,212,]),'LBLOCK':([49,54,70,72,84,122,142,217,231,266,277,],[77,91,105,77,118,166,174,236,251,278,279,]),'PLUSPLUS':([49,233,],[78,78,]),'MINUSMINUS':([49,233,],[79,79,]),'NOT':([53,60,85,88,123,124,125,126,127,128,129,130,131,132,133,134,138,252,],[88,88,88,88,88,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,88,88,]),'ELSE':([213,],[231,]),'ELSIF':([213,],[232,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,3,91,166,174,236,251,278,279,],[2,29,136,190,195,255,264,280,281,]),'declaration':([0,3,91,166,174,236,251,278,279,],[3,3,3,3,3,3,3,3,3,]),'header_declaration':([0,3,91,166,174,236,251,278,279,],[4,4,4,4,4,4,4,4,4,]),'print':([0,3,91,166,174,236,251,278,279,],[5,5,5,5,5,5,5,5,5,]),'var_declaration':([0,3,91,166,174,236,251,278,279,],[6,6,6,6,6,6,6,6,6,]),'sentencia_if':([0,3,91,166,174,236,251,278,279,],[7,7,7,7,7,7,7,7,7,]),'function_declaration':([0,3,91,166,174,236,251,278,279,],[8,8,8,8,8,8,8,8,8,]),'call_function':([0,3,74,91,166,174,236,251,278,279,],[9,9,107,9,9,9,9,9,9,9,]),'E':([0,3,15,74,91,166,174,236,251,278,279,],[10,10,47,106,10,10,10,10,10,10,10,]),'ciclos':([0,3,91,166,174,236,251,278,279,],[11,11,11,11,11,11,11,11,11,]),'T':([0,3,15,32,33,74,91,166,174,236,251,278,279,],[23,23,23,61,62,23,23,23,23,23,23,23,23,]),'F':([0,3,15,32,33,56,57,74,91,166,174,236,251,278,279,],[27,27,27,27,27,93,94,27,27,27,27,27,27,27,27,]),'arg':([14,37,67,68,69,92,],[36,66,101,102,103,137,]),'var_declaration_gen':([14,37,53,60,67,68,69,85,88,92,123,138,252,],[38,38,89,89,38,38,38,89,89,38,89,89,89,]),'type':([14,37,53,60,67,68,69,85,88,92,123,138,252,],[39,39,87,87,39,39,39,120,87,39,87,87,87,]),'typevar':([14,37,53,60,67,68,69,74,77,85,88,92,105,114,116,118,119,123,138,181,183,185,186,189,199,200,203,204,206,207,211,212,219,222,225,228,252,256,257,258,259,260,261,262,263,],[43,43,43,43,43,43,43,108,112,43,43,43,146,152,155,159,163,43,43,155,198,202,205,210,155,155,155,155,155,155,155,155,159,159,244,244,43,159,159,159,159,244,244,244,244,]),'incdec':([49,233,],[75,253,]),'cond':([53,60,85,88,123,138,252,],[86,99,121,135,167,170,265,]),'sent_for':([58,215,235,],[95,234,254,]),'log':([86,99,121,135,167,170,265,],[123,123,123,123,123,123,123,]),'lista':([116,181,199,200,203,204,206,207,211,212,],[154,197,220,221,223,224,226,227,229,230,]),'lista1':([118,119,219,222,256,257,258,259,],[158,161,237,240,268,269,270,271,]),'lista2':([119,225,228,260,261,262,263,],[162,245,248,272,273,274,275,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','AnalizadorSintactico.py',11),
  ('declaration_list -> declaration declaration_list','declaration_list',2,'p_declaration_list_2','AnalizadorSintactico.py',15),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','AnalizadorSintactico.py',16),
  ('declaration -> header_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',20),
  ('declaration -> print','declaration',1,'p_declaration','AnalizadorSintactico.py',21),
  ('declaration -> var_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',22),
  ('declaration -> sentencia_if','declaration',1,'p_declaration','AnalizadorSintactico.py',23),
  ('declaration -> function_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',24),
  ('declaration -> call_function SEMICOLON','declaration',2,'p_declaration','AnalizadorSintactico.py',25),
  ('declaration -> E SEMICOLON','declaration',2,'p_declaration','AnalizadorSintactico.py',26),
  ('declaration -> ciclos','declaration',1,'p_declaration','AnalizadorSintactico.py',27),
  ('header_declaration -> USE ID SEMICOLON','header_declaration',3,'p_header_declaration_1','AnalizadorSintactico.py',33),
  ('header_declaration -> REQUIRE ID SEMICOLON','header_declaration',3,'p_header_declaration_2','AnalizadorSintactico.py',37),
  ('var_declaration -> PESOS ID SEMICOLON','var_declaration',3,'p_var_declaration_1','AnalizadorSintactico.py',42),
  ('var_declaration -> MY PESOS ID SEMICOLON','var_declaration',4,'p_var_declaration_1','AnalizadorSintactico.py',43),
  ('var_declaration -> PESOS ID EQUAL E SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',44),
  ('var_declaration -> PESOS ID EQUAL call_function SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',45),
  ('var_declaration -> PESOS ID incdec SEMICOLON','var_declaration',4,'p_var_declaration_1','AnalizadorSintactico.py',46),
  ('var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON','var_declaration',6,'p_var_declaration_1','AnalizadorSintactico.py',47),
  ('var_declaration -> PESOS ID EQUAL typevar SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',48),
  ('var_declaration -> ARROBA ID SEMICOLON','var_declaration',3,'p_var_declaration_2','AnalizadorSintactico.py',54),
  ('var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_2','AnalizadorSintactico.py',55),
  ('var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON','var_declaration',6,'p_var_declaration_2','AnalizadorSintactico.py',56),
  ('var_declaration -> PORCENTAJE ID SEMICOLON','var_declaration',3,'p_var_declaration_3','AnalizadorSintactico.py',62),
  ('var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',63),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',64),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',65),
  ('var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON','var_declaration',6,'p_var_declaration_3','AnalizadorSintactico.py',66),
  ('lista2 -> typevar COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',70),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',71),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',72),
  ('lista2 -> typevar COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',73),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',74),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',75),
  ('lista2 -> ID COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',76),
  ('lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',77),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',78),
  ('lista2 -> ID COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',79),
  ('lista2 -> ID COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',80),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',81),
  ('lista1 -> typevar EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',85),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',86),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',87),
  ('lista1 -> typevar EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',88),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',89),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',90),
  ('lista1 -> ID EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',91),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',92),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',93),
  ('lista1 -> ID EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',94),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',95),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',96),
  ('lista -> typevar COMMA lista','lista',3,'p_lista','AnalizadorSintactico.py',100),
  ('lista -> typevar','lista',1,'p_lista','AnalizadorSintactico.py',101),
  ('typevar -> CADENA','typevar',1,'p_typevar','AnalizadorSintactico.py',105),
  ('typevar -> CADENAA','typevar',1,'p_typevar','AnalizadorSintactico.py',106),
  ('typevar -> ENTERO','typevar',1,'p_typevar','AnalizadorSintactico.py',107),
  ('typevar -> OCTAL','typevar',1,'p_typevar','AnalizadorSintactico.py',108),
  ('typevar -> HEXADECIMAL','typevar',1,'p_typevar','AnalizadorSintactico.py',109),
  ('E -> E PLUS T','E',3,'p_E','AnalizadorSintactico.py',115),
  ('E -> E MINUS T','E',3,'p_E','AnalizadorSintactico.py',116),
  ('E -> T','E',1,'p_E','AnalizadorSintactico.py',117),
  ('T -> T TIMES F','T',3,'p_T','AnalizadorSintactico.py',121),
  ('T -> T DIVIDE F','T',3,'p_T','AnalizadorSintactico.py',122),
  ('T -> F','T',1,'p_T','AnalizadorSintactico.py',123),
  ('F -> PESOS ID','F',2,'p_F','AnalizadorSintactico.py',127),
  ('F -> PESOS ID LBRACKET ENTERO RBRACKET','F',5,'p_F','AnalizadorSintactico.py',128),
  ('F -> ENTERO','F',1,'p_F','AnalizadorSintactico.py',129),
  ('F -> PESOS ID LBLOCK typevar RBLOCK','F',5,'p_F','AnalizadorSintactico.py',130),
  ('F -> LPAREN E RPAREN','F',3,'p_F','AnalizadorSintactico.py',131),
  ('ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK','ciclos',13,'p_ciclos','AnalizadorSintactico.py',137),
  ('ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK','ciclos',10,'p_ciclos','AnalizadorSintactico.py',138),
  ('ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','ciclos',7,'p_ciclos','AnalizadorSintactico.py',139),
  ('sent_for -> PESOS ID','sent_for',2,'p_sent_for','AnalizadorSintactico.py',143),
  ('sent_for -> PESOS ID EQUAL ENTERO','sent_for',4,'p_sent_for','AnalizadorSintactico.py',144),
  ('sent_for -> MY PESOS ID EQUAL ENTERO','sent_for',5,'p_sent_for','AnalizadorSintactico.py',145),
  ('sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',7,'p_sent_for','AnalizadorSintactico.py',146),
  ('sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',6,'p_sent_for','AnalizadorSintactico.py',147),
  ('log -> LESS','log',1,'p_log','AnalizadorSintactico.py',153),
  ('log -> GREATER','log',1,'p_log','AnalizadorSintactico.py',154),
  ('log -> ISEQUAL','log',1,'p_log','AnalizadorSintactico.py',155),
  ('log -> ISEQUAL_STRING','log',1,'p_log','AnalizadorSintactico.py',156),
  ('log -> LESSEQUAL','log',1,'p_log','AnalizadorSintactico.py',157),
  ('log -> GREATEREQUAL','log',1,'p_log','AnalizadorSintactico.py',158),
  ('log -> DEQUAL','log',1,'p_log','AnalizadorSintactico.py',159),
  ('log -> AND','log',1,'p_log','AnalizadorSintactico.py',160),
  ('log -> ANDS','log',1,'p_log','AnalizadorSintactico.py',161),
  ('log -> ORS','log',1,'p_log','AnalizadorSintactico.py',162),
  ('log -> OR','log',1,'p_log','AnalizadorSintactico.py',163),
  ('type -> typevar','type',1,'p_type','AnalizadorSintactico.py',167),
  ('type -> var_declaration_gen','type',1,'p_type','AnalizadorSintactico.py',168),
  ('cond -> type','cond',1,'p_cond','AnalizadorSintactico.py',172),
  ('cond -> cond log cond','cond',3,'p_cond','AnalizadorSintactico.py',173),
  ('cond -> NOT cond','cond',2,'p_cond','AnalizadorSintactico.py',174),
  ('cond -> LPAREN type RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',175),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',176),
  ('incdec -> PLUSPLUS','incdec',1,'p_incdec','AnalizadorSintactico.py',182),
  ('incdec -> MINUSMINUS','incdec',1,'p_incdec','AnalizadorSintactico.py',183),
  ('print -> PRINT arg SEMICOLON','print',3,'p_print','AnalizadorSintactico.py',189),
  ('print -> PRINT LPAREN arg RPAREN SEMICOLON','print',5,'p_print','AnalizadorSintactico.py',190),
  ('var_declaration_gen -> PESOS ID','var_declaration_gen',2,'p_var_declaration_gen','AnalizadorSintactico.py',196),
  ('var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',197),
  ('var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',198),
  ('var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',199),
  ('arg -> var_declaration_gen','arg',1,'p_arg','AnalizadorSintactico.py',203),
  ('arg -> type','arg',1,'p_arg','AnalizadorSintactico.py',204),
  ('arg -> type COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',205),
  ('arg -> CADENA','arg',1,'p_arg','AnalizadorSintactico.py',206),
  ('arg -> var_declaration_gen COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',207),
  ('arg -> CADENA COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',208),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','sentencia_if',7,'p_sentencia_if','AnalizadorSintactico.py',214),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK','sentencia_if',11,'p_sentencia_if','AnalizadorSintactico.py',215),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','sentencia_if',14,'p_sentencia_if','AnalizadorSintactico.py',216),
  ('function_declaration -> SUB ID LBLOCK declaration_list RBLOCK','function_declaration',5,'p_function_declaration','AnalizadorSintactico.py',225),
  ('call_function -> ANDBW ID','call_function',2,'p_call_function','AnalizadorSintactico.py',229),
  ('call_function -> ANDBW ID LPAREN arg RPAREN','call_function',5,'p_call_function','AnalizadorSintactico.py',230),
]
